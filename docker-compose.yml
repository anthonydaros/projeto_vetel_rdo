version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: projeto-vetel:latest
    container_name: projeto-vetel-app
    restart: unless-stopped
    
    # Coolify magic environment variables
    environment:
      # Required variables - deployment will fail if not set
      - DB_HOST=${DB_HOST:?}
      - DB_PORT=${DB_PORT:?3306}
      - DB_NAME=${DB_NAME:?}
      - DB_USERNAME=${DB_USERNAME:?}
      - DB_PASSWORD=${DB_PASSWORD:?}
      
      # Application settings with defaults
      - APP_ENV=${APP_ENV:?production}
      - APP_DEBUG=${APP_DEBUG:?false}
      - APP_URL=${SERVICE_FQDN_APP}
      
      # Timezone configuration
      - TIMEZONE=${TIMEZONE:?America/Sao_Paulo}
      
      # Session configuration
      - SESSION_LIFETIME=${SESSION_LIFETIME:?3600}
      - SESSION_SECURE_COOKIE=${SESSION_SECURE_COOKIE:?true}
      
      # Admin credentials (Coolify will generate if using SERVICE_PASSWORD)
      - ADMIN_USERNAME=${ADMIN_USERNAME:?admin}
      - ADMIN_PASSWORD=${SERVICE_PASSWORD_ADMIN}
      - ADMIN_EMAIL=${ADMIN_EMAIL:?admin@example.com}
      
      # Photo storage configuration
      - PHOTO_STORAGE_PATH=${PHOTO_STORAGE_PATH:?/var/www/html/img/album}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE:?10M}
      
      # Security settings
      - JWT_SECRET=${SERVICE_PASSWORD_64_JWT}
      - APP_KEY=${SERVICE_PASSWORD_64_APPKEY}
      
      # Email configuration (optional)
      - MAIL_DRIVER=${MAIL_DRIVER:-smtp}
      - MAIL_HOST=${MAIL_HOST:-}
      - MAIL_PORT=${MAIL_PORT:-587}
      - MAIL_USERNAME=${MAIL_USERNAME:-}
      - MAIL_PASSWORD=${MAIL_PASSWORD:-}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION:-tls}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS:-noreply@example.com}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME:-Projeto Vetel}
      
      # Coolify FQDN configuration for the application
      - SERVICE_FQDN_APP
      - SERVICE_URL_APP
    
    # Volumes for persistent data with proper permissions
    volumes:
      # Application data - using named volumes for better permission handling
      - uploads:/var/www/html/img/album:rw
      - reports:/var/www/html/relatorios:rw
      
      # Session storage
      - sessions:/var/www/sessions:rw
      
      # Logs
      - logs:/var/log/apache2:rw
      
      # Bind mount for .env file (created by Coolify)
      - type: bind
        source: ./.env
        target: /var/www/html/.env
        content: |
          # Database Configuration
          DB_HOST=${DB_HOST}
          DB_PORT=${DB_PORT}
          DB_NAME=${DB_NAME}
          DB_USERNAME=${DB_USERNAME}
          DB_PASSWORD=${DB_PASSWORD}
          
          # Application Settings
          APP_ENV=${APP_ENV}
          APP_DEBUG=${APP_DEBUG}
          APP_URL=${SERVICE_URL_APP}
          
          # Timezone
          TIMEZONE=${TIMEZONE}
          
          # Session Configuration
          SESSION_LIFETIME=${SESSION_LIFETIME}
          SESSION_SECURE_COOKIE=${SESSION_SECURE_COOKIE}
          
          # Admin Credentials
          ADMIN_USERNAME=${ADMIN_USERNAME}
          ADMIN_PASSWORD=${ADMIN_PASSWORD}
          ADMIN_EMAIL=${ADMIN_EMAIL}
          
          # Photo Storage
          PHOTO_STORAGE_PATH=${PHOTO_STORAGE_PATH}
          MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE}
          
          # Security
          JWT_SECRET=${JWT_SECRET}
          APP_KEY=${APP_KEY}
          
          # Email Configuration
          MAIL_DRIVER=${MAIL_DRIVER}
          MAIL_HOST=${MAIL_HOST}
          MAIL_PORT=${MAIL_PORT}
          MAIL_USERNAME=${MAIL_USERNAME}
          MAIL_PASSWORD=${MAIL_PASSWORD}
          MAIL_ENCRYPTION=${MAIL_ENCRYPTION}
          MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
          MAIL_FROM_NAME=${MAIL_FROM_NAME}
    
    # Health check configuration
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health.php"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    
    # Coolify labels for management
    labels:
      - coolify.managed=true
      - coolify.type=application
      
      # Traefik configuration (Coolify proxy)
      - traefik.enable=true
      - traefik.http.routers.app.rule=Host(`${SERVICE_FQDN_APP}`)
      - traefik.http.routers.app.entryPoints=http,https
      - traefik.http.services.app.loadbalancer.server.port=80
      
      # SSL redirect middleware
      - traefik.http.middlewares.app-https.redirectscheme.scheme=https
      - traefik.http.middlewares.app-https.redirectscheme.permanent=true
      
      # Security headers middleware
      - traefik.http.middlewares.app-headers.headers.customFrameOptionsValue=SAMEORIGIN
      - traefik.http.middlewares.app-headers.headers.contentTypeNosniff=true
      - traefik.http.middlewares.app-headers.headers.browserXssFilter=true
      - traefik.http.middlewares.app-headers.headers.referrerPolicy=strict-origin-when-cross-origin
      - traefik.http.middlewares.app-headers.headers.stsSeconds=31536000
      - traefik.http.middlewares.app-headers.headers.stsIncludeSubdomains=true
      - traefik.http.middlewares.app-headers.headers.stsPreload=true
    
    # Resource limits (optional - adjust based on VPS)
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 256M

# Named volumes for persistence with proper permissions
volumes:
  uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/docker/volumes/projeto-vetel-uploads/_data
  reports:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/docker/volumes/projeto-vetel-reports/_data
  sessions:
    driver: local
  logs:
    driver: local

# Let Coolify handle networking - no custom networks